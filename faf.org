* Development in Siconos/Numerics
** Newton method based on SOCCP formulation
** General SOCCP solver
+ Interior points methods
  + Work of Kleinert, Simeon and Obermayr
  +    
+ FB and regularized FB for SOCCP
+ Have a look to cvxopt (python and C)
** Proximal point algorithm
+ Continue to study the influence of the regularization parameter
+ Literature
  + Chen.Teboublle_SIOPT1993
    [[/Users/acary/Publi/Optimisation/Chen.Teboulle_SIOPT1993.pdf]]
  + 

** LocalAlartCurnier
+ Possibility to avoid the LU factor of W ?
+ Guess rho with VIFixedPointProjection
** Krylov techniques
+ Work of Heyn et al.
** Acceleration of Gauss-Seidel Strategy
+ Aitken--like strategy
+ have a look to FISTA and Nesterov work. INPPA
** ACLM formulation.
+ Implement Fixed point Iteration
  + Which internal solver ? 
    + the internal solver must use the convexity of the problem SOCQP ?
    + Block-splitting + local solver (PSOR + list of solver). Copy of nsgs with psor options DONE
    + Remain to add Newton--based solver ?
+ ACLM with SOCLCP solver
  + What is the good strategy for the internal solver ?
    very accurate convergence or  loose ONE
      
+ Newton method of convex SOCLCP or SOCQP
  Newton method on the problem $F(s)=s$

*** TODO Alternative strategy to drive to convergence. ?

* Literature
  Check for ``solving frictional contact problem''
  \begin{itemize}
  \item in google, and scholar
  \item Zentralblatt and MAthSciNet
  \end{itemize}
** Renard
   add [[http://math.univ-lyon1.fr/~renard/papers/2008_frst.pdf]] in the list of reading
** Read work of Kucera Dostal
** CCP / SOCP
*** Read Goldfarb Alizabeh
*** SOCCP Fukushima, Hyashi Works
+  [[/Users/acary/Publi/Optimisation/SOCCP]]
+ Combined and smoothing method
+ Matrix splitting

*** Christian Kanzow, Izabella Ferenczi, and Masao Fukushima
    ON THE LOCAL CONVERGENCE OF SEMISMOOTH NEWTON METHODS FOR LINEAR AND NONLINEAR SECOND-ORDER CONE PROGRAMS WITHOUT STRICT COMPLEMENTARITY∗
    [[/Users/acary/Publi/Optimisation/SOCCP/Kanzow.Ferenczi.Fukushima_SIOPT2009.pdf]]

*** Smoothing and BFGS work of Chen and Tseng
  +  [[/Users/acary/Publi/Optimisation/SOCCP/Chen.Tseng_MP2005.pdf]]
  + retrieve L-BFGS of Nocedal  ?  Use of M1QN3 ?
** Existing software
*** SOCP: Software for Second-Order Cone Programming
	 M. Lobo, L. Vandenberghe, and S. Boyd
	 http://stanford.edu/~boyd/old_software/SOCP.html
*** RESNA :
*** COMPASS: A Free Solver for Mixed Complementarity Problems
    D. A. Schmelzer
    http://www.mat.univie.ac.at/~neum/software/compass/schmelzerDA.pdf
** Extra gradient method and De Saxce Fixed point
   The value of the parameter strongly influences the convergence.
  + An implementation is present in the routine. What is the source ?
  + Adaptive step-size rule.
    + Marcotte and Wu 1995 (see LNACM 35)
      Too theoritic.
    + Khobotov_CMMP1987
      Modification of the extra-gradient method for solving variational inequalities and certain optimization problems.
      /Users/acary/Publi/Optimisation/VariationalInequalities/Khobotov_CMMP1987.pdf
      --> First  implementation of an Armijo rule for EG method.
    + Solodov.Tseng1996, He.Liao_JOTA2002,Han.Lo_CMA2002.
            
      Two New Self-Adaptive Projection Methods for Variational Inequality Problems  Han Lo CMA 2002
      [[/Users/acary/Publi/Optimisation/VariationalInequalities/Han.Lo_CMA2002.pdf]]

      [[/Users/acary/Publi/Optimisation/VariationalInequalities/He.Liao_JOTA2002.pdf]]

      [[/Users/acary/Publi/Optimisation/VariationalInequalities/Solodov.Tseng_SICOPT1996.pdf]]
      
      --> Armijo step-size rule with differents criteria for the Lipschitz condition.
    + Chen.ea_EJOR2001
      A self-adaptive self-adaptive projection and contraction algorithm for the tra􏰼c assignment problem with path-speci®c costs projection and contraction algorithm for the trac assignment problem with path-speci®c costs  
      [[/Users/acary/Publi/Optimisation/VariationalInequalities/Chen.ea_EJOR2001.pdf]]
      --> Application of Projection and contraction methods to traffic assignment problem
    + Han_JCAM2008
      A generalized proximal-point-based prediction–correction method for variational inequality problems
      [[/Users/acary/Publi/Optimisation/VariationalInequalities/Han_JCAM2008.pdf]]
      --> A generalized proximal-point-based prediction–correction algorithm.  
      --> Use a Bregman function to compute generalization of Proximal algorihtm
      (see  Chen.Teboublle_SIOPT1993  [[/Users/acary/Publi/Optimisation/Chen.Teboulle_SIOPT1993.pdf]])
      

    + Unified framework of extragradient-type methods for pseudomonotone variational inequalities
	  YJ Wang, NH Xiu, CY Wang - Journal of Optimization Theory and …, 2001 - Springer
	  http://219.218.19.2/lzf/lzf/wjj/6.pdf
    + Paper of Noor.
      [[/Users/acary/Publi/Optimisation/VariationalInequalities/Noor_JOTA2003.pdf]]
    + Two New Self-Adaptive Projection Methods for Variational Inequality Problems  Han Lo CMA 2002
      Line search with augmentation of the coefficient.
      [[/Users/acary/Publi/Optimisation/VariationalInequalities/Han.Lo_CMA2002.pdf]]
    +
    + D.F. Sun, A new step-size skill for solving a class of nonlinear projection equations, Journal of Computational Mathematics 13, 357-368, (1995).
      [[/Users/acary/Publi/Optimisation/VariationalInequalities/Sun_JCAM95.pdf]]
      
  + Book of Konnov
      http://www.springer.com/business+%26+management/operations+research/book/978-3-540-67999-8?token=gbgen&wt_mc=Google-_-Book%20Search-_-Springer-_-EN
    + Have a look to On the Goldstein - Levitin - Polyak Gradient
     Projection Method DIMITRI P. BERTSEKAS for a justification on the generalized Armijo step rule
      [[/Users/acary/Publi/Optimisation/Bertsekas_IEEETAC1976.pdf]]
** TODO Have a look to paper about a Gauss-Newton
   approach with quite elaborate line search:
   http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5509

** Target journal Archives of Computational Methods in Engineering
   http://www.springer.com/engineering/computational+intelligence+and+complexity/journal/11831

   extended state-of-the-art reviews
** Optimization
+ [[http://www.optimization-online.org/DB_FILE/2011/12/3266.pdf]]
+ http://www.optimization-online.org/DB_HTML/2012/01/3302.html
  [[/Users/acary/Desktop/Lopez.ea_OO2012.pdf]]
  Definition des operateurs copositive
** QVI implementation
  + Work of Facchinei (Singapore Talk)
  + Work of Michael Ulbrich (Singapore Talk)
** Augmented Lagrangian formulation
+ Discuss with Paul Armand
   
* Paper contact-friction 					  :ABC:PAPER:
** Objectives
   + Simple iteratives  methods
     + Fixed point
     + Projection/splitting (PSOR)
     + Fake Coulomb Friction (Anitescu \& Tasora)
   + Complementarity function (zeroes of functions)
     + Alart--Curnier method
     + Jean--Moreau method
     + DeSaxce + Newton (Joli Feng)
     + Fischer--bursmeister for SOCCP (smoothing hayashima fukushima)
     + Newton
       + line search (GP, Armijo, Non-monotone watch dogs)

   + Optimisation-based methods
     + Successive approximations (Haslinger, ...) QP et SOC (Kucera)
     + ACLM (Fixed point, Newton, Quasi-Newton, ....)
     + SOCLCP (Kanno, et al.)

   + Optional approach
     + SOCP (Optimization approach)
     + Interior point
** Beyond the scope of the paper.
   + no LCP
   + no pivoting
** Monotonicity of VI

{\blue 

\paragraph{monotonicity}

For Problem~\ref{prob:II},%  we have the VI (\ref{eq:vi-II}) that we rewrite for our convenience with
% \begin{equation}
%   \label{eq:vi-II}
%   F_{\vitwo}(u,r) =\left[
%   \begin{array}{c}
%     u - Wr -q
%     u + g(u)
% \end{array}\right]
% \text{ and } X_{\vitwo} = \RR^{n_c}\times K.
% \end{equation}
% \begin{equation}
%   \label{eq:mono-IIa}
%     (F_{\vitwo}(u,r)-F_{\vitwo}(v,s))^T(
%     \left[\begin{array}{c}
%         u \\ r
%     \end{array}\right]
% -
%  \left[\begin{array}{c}
%         v \\ s
v%     \end{array}\right]
% ) = (r-s)^T W (r-s)   + \|u-v\|^2 + \sum _{\alpha =1}^{n_c} \mu^\alpha (x_\n-y_n) [\|[Wx+q]^\alpha_\t \| - \|[Wy+q]^\alpha_\t \|]
% \end{equation}





\begin{equation}
  \label{eq:mono-II}
    (F_{\vitwo}(x)-F_{\vitwo}(y))^T(x-y) = (x-y)^T W (x-y) + \sum _{\alpha =1}^{n_c} \mu^\alpha (x_\n-y_n) [\|[Wx+q]^\alpha_\t \| - \|[Wy+q]^\alpha_\t \|]
\end{equation}

\begin{equation}
  \label{eq:Jac-II}
    \nabla_r F_{\vitwo}(r) = W + W\left[
    \begin{array}{cc}
       0 & \mu \Frac{[W r+q]_\t}{\|[W r+q]_\t\|}\\
       0 & 0
    \end{array}\right]
\end{equation}

** Tests problems (FCLIB)
   + collections
     + spheres
       + flows and stacking (Example Tasora)
     + sticks
       + flows and stacking (Example Tasora)
     + hair, LMGC clumps ??
   + deformables quasi-static / dynamic
     + Hertz 3D FEM
     + masonry

** TODO Complete the introduction
   DEADLINE: <2014-12-27 Sam>
   + Add a list of approach not discussed in the paper. leave it as future work.
** TODO Complete Section 3
   DEADLINE: <2014-12-27 Sam>
   + Understand the continuity argument of Alart
   + Find references for alternating projection N and after T
** TODO Complete Section 4
   DEADLINE: <2014-12-27 Sam>
  + Section 4.1 
    \begin{itemize}
    \item situate the work of \cite{DeSaxce.Feng90,DeSaxce.Feng1998} and  \cite{Simo.Laursen1992,Laursen.Simo1993b}.
    \item implement the work of Simo just to laugh
    \item Have a careful look to the work of Krause.  
    \end{itemize}
  + Section 4.2
    \begin{itemize}
    \item Rule and efficient Choice of $\rho$.
    \item Should we remove hyperplane projection ?
    \item Acceleration techniques and Nesterov Method ? FISTA and Nesterov work. INPPA
    \end{itemize}
  + Section 4.3
    What can be retained from\cite{Heyn_PhD2013} ?
    Krylov techniques 
  


* Comparison tools

** using comp
   
+ parallel usage
  ls *.hdf5 | parallel comp.py --timeout=100 --no-collect '--file={}'
+ --no-collect   
  leave the result into separate file that are named according the solver and the name of the problem
+ --just--collect
  collect all the result into comp.hdf5
+ --timeout=10   
  set the maximum time of computation for a solver to 10 seconds
+ --domain='a:d:b'
  restrict the domain of the performance profile to the interval [a,b] with a step of d
  or a perfomance profile a should be greater or equal 1
+ --iter  OBSOLETE ?
  select the number iteration as the measure for the perfomance profile
+ --time OBSOLETE ?
  select the computation time as the measure for the perfomance profile
+ --flop OBSOLETE ?
+ --measure=value
  select the value  as the measure for the perfomance profile
  possible values are time, iter, flpops


+ usage

  comp.py   --display --time --domain='1:0.1:10'  comp.hdf5


  comp.py --display --measure=time --solvers=Gauss,Tresca,SOCLCP,ACLM --domain=1:0.1:100
